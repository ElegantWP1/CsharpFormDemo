<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="softDataSet" targetNamespace="http://tempuri.org/softDataSet.xsd" xmlns:mstns="http://tempuri.org/softDataSet.xsd" xmlns="http://tempuri.org/softDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="demo1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="demo1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.教务管理系统.Properties.Settings.GlobalReference.Default.demo1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="gradeTableAdapter" GeneratorDataComponentClassName="gradeTableAdapter" Name="grade" UserDataComponentName="gradeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="demo1 (Settings)" DbObjectName="soft.dbo.grade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[grade] WHERE (([sno] = @Original_sno) AND ([cno] = @Original_cno) AND ((@IsNull_tno = 1 AND [tno] IS NULL) OR ([tno] = @Original_tno)) AND ((@IsNull_grade = 1 AND [grade] IS NULL) OR ([grade] = @Original_grade)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tno" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_grade" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[grade] ([sno], [cno], [tno], [grade]) VALUES (@sno, @cno, @tno, @grade);
SELECT sno, cno, tno, grade FROM grade WHERE (cno = @cno) AND (sno = @sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sno, cno, tno, grade FROM dbo.grade</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[grade] SET [sno] = @sno, [cno] = @cno, [tno] = @tno, [grade] = @grade WHERE (([sno] = @Original_sno) AND ([cno] = @Original_cno) AND ((@IsNull_tno = 1 AND [tno] IS NULL) OR ([tno] = @Original_tno)) AND ((@IsNull_grade = 1 AND [grade] IS NULL) OR ([grade] = @Original_grade)));
SELECT sno, cno, tno, grade FROM grade WHERE (cno = @cno) AND (sno = @sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tno" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tno" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_grade" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="sno" DataSetColumn="sno" />
              <Mapping SourceColumn="cno" DataSetColumn="cno" />
              <Mapping SourceColumn="tno" DataSetColumn="tno" />
              <Mapping SourceColumn="grade" DataSetColumn="grade" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="demo1 (Settings)" DbObjectName="soft.dbo.grade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sno, cno, tno, grade FROM dbo.grade where cno ='2001'</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="demo1 (Settings)" DbObjectName="soft.dbo.grade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sno, cno, tno, grade FROM dbo.grade</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="softDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="softDataSet" msprop:Generator_UserDSName="softDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="grade" msprop:Generator_TableClassName="gradeDataTable" msprop:Generator_TableVarName="tablegrade" msprop:Generator_TablePropName="grade" msprop:Generator_RowDeletingName="gradeRowDeleting" msprop:Generator_RowChangingName="gradeRowChanging" msprop:Generator_RowEvHandlerName="gradeRowChangeEventHandler" msprop:Generator_RowDeletedName="gradeRowDeleted" msprop:Generator_UserTableName="grade" msprop:Generator_RowChangedName="gradeRowChanged" msprop:Generator_RowEvArgName="gradeRowChangeEvent" msprop:Generator_RowClassName="gradeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sno" msprop:Generator_ColumnVarNameInTable="columnsno" msprop:Generator_ColumnPropNameInRow="sno" msprop:Generator_ColumnPropNameInTable="snoColumn" msprop:Generator_UserColumnName="sno">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cno" msprop:Generator_ColumnVarNameInTable="columncno" msprop:Generator_ColumnPropNameInRow="cno" msprop:Generator_ColumnPropNameInTable="cnoColumn" msprop:Generator_UserColumnName="cno">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="tno" msprop:Generator_ColumnVarNameInTable="columntno" msprop:Generator_ColumnPropNameInRow="tno" msprop:Generator_ColumnPropNameInTable="tnoColumn" msprop:Generator_UserColumnName="tno" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="grade" msprop:Generator_ColumnVarNameInTable="columngrade" msprop:Generator_ColumnPropNameInRow="grade" msprop:Generator_ColumnPropNameInTable="gradeColumn" msprop:Generator_UserColumnName="grade" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:grade" />
      <xs:field xpath="mstns:sno" />
      <xs:field xpath="mstns:cno" />
    </xs:unique>
  </xs:element>
</xs:schema>